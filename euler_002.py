#!/usr/bin/env python
# -*- coding: utf-8 -*-
# Jesse Rubin
"""
Even Fibonacci numbers
Problem 2 
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
"""

import functools

@functools.lru_cache(maxsize = None)
def fib(n):
    if n == 0 or n == 1 or n == 2:
        return (n)
    else:
        return (fib(n-1) + fib(n-2))

l = sum([n for n in [fib(i) for i in range(50)] if n % 2 == 0 and n <= 4000000])

print("Answer: {}".format(l))