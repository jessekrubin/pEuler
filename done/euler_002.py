#!/usr/bin/env python
# -*- coding: utf-8 -*-
# Jesse Rubin ~ Project Euler
"""
Even Fibonacci numbers
Problem 2
Each new term in the Fibonacci sequence is generated by adding the previous
two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed
four million, find the sum of the even-valued terms.
"""

from lib.fibbing import fib
from lib.decorations import tictoc


@tictoc
def sum_even_fibs(upper_bound):
    return [
        n for n in [fib(i) for i in range(40)]
        if n % 2 == 0 and n < upper_bound + 1
    ]


even_fibs_below_4_mil = sum_even_fibs(4000000)
print("Even fib numbers below 4 million: {}".format(even_fibs_below_4_mil))
sum_of_those_fibs = sum(even_fibs_below_4_mil)
print("Sum: {}".format(sum_of_those_fibs))  # Sum: 4613732
