# !/usr/bin/env python
# -*- coding: utf-8 -*-
# Jesse Rubin - project Euler
"""
Highly divisible triangular number
Problem 12

The sequence of triangle numbers is generated by adding the natural numbers. So
the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten
terms would be:

1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:

 1: 1
 3: 1, 3
 6: 1, 2, 3, 6
10: 1, 2, 5, 10
15: 1, 3, 5, 15
21: 1, 3, 7, 21
28: 1, 2, 4, 7, 14, 28

We can see that 28 is the first triangle number to have over five divisors_gen.

What is the value of the first triangle number to have over five hundred
divisors_gen?
"""
__sol__ = 76576500

from lib.maths import n_divisors

cur_tri = 1
maxmax = 1
i = 1
while maxmax < 500:
    i += 1
    cur_tri += i
    numDivs = n_divisors(cur_tri)
    if numDivs > maxmax:
        maxmax = numDivs

print('tri num index: {}'.format(i))  # tri num index: 12375
print('triangle #: {}'.format(cur_tri))  # cur #: 76576500
print('# divisors_gen: {}'.format(n_divisors(cur_tri)))  # # divisors_gen: 576
def p012():
    pass
if __name__ == '__main__':    p012()